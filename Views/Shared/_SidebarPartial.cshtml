@using System.Text.Json;
@using Moment2.Models;

@{
    string jsondata = System.IO.File.ReadAllText("media.json");
    var sidebarMedia = JsonSerializer.Deserialize<List<MediaModel>>(jsondata);

    @* Sorterar listan efter vilken som skapades senast *@
    sidebarMedia.Sort((x, y) => x.Date.CompareTo(y.Date));
    sidebarMedia.Reverse();

    @* Skapar listor för böcker och serier *@
    var sideBarBooks = new List<MediaModel> { };
    var sideBarSeries = new List<MediaModel> { };

    @* sorterar in de i olika listor *@
    @foreach (var Media in sidebarMedia)
    {
        Console.WriteLine("media: " + Media.MediaName);
        if (Media.MediaType == "Book")
        {
            sideBarBooks.Add(Media);
        }
        else
        {
            sideBarSeries.Add(Media);
        }
    }

}

<aside>
    <p>Det här är en sidebar</p>
    <p>Senaste tillagda:</p>

    <p>Böcker:</p>
    @for (var i = 0; i < sideBarBooks.Count && i < 3; i++)
    {
        <div>
            <h4>@sideBarBooks[i].MediaName</h4>
                @* kollar om score är select *@
            @if (sideBarBooks[i].MediaScore != "Select")
            {
                <p>Score: @sideBarBooks[i].MediaScore</p>
            }
            else
            {
                <p>Score: ?</p>
            }
            <p>Kapitel: @sideBarBooks[i].MediaEpisodesChapters</p>
            <p>Volymer: @sideBarBooks[i].MediaSeasonsVolumes</p>
        </div>
    }

    <p>Filmer:</p>
    @for (var i = 0; i < sideBarSeries.Count && i < 3; i++)
    {
        <div>
            <h3>@sideBarSeries[i].MediaName</h3>
            <p>Score: @sideBarSeries[i].MediaScore</p>
            <p>Episoder: @sideBarSeries[i].MediaEpisodesChapters</p>
            <p>Säsonger: @sideBarSeries[i].MediaSeasonsVolumes</p>
        </div>
    }
</aside>